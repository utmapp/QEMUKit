//
// Copyright Â© 2025 osy. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#import "QEMUKeyCode.h"
#import "qapi-types-ui.h"

#define ASSERT_KEYCODE_MATCH(nsName, cName) \
    _Static_assert(QEMUKeyCode##nsName == Q_KEY_CODE_##cName, \
    #nsName " must match " #cName)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wenum-compare"

ASSERT_KEYCODE_MATCH(KeyUnmapped, UNMAPPED);
ASSERT_KEYCODE_MATCH(KeyShift, SHIFT);
ASSERT_KEYCODE_MATCH(KeyShiftR, SHIFT_R);
ASSERT_KEYCODE_MATCH(KeyAlt, ALT);
ASSERT_KEYCODE_MATCH(KeyAltR, ALT_R);
ASSERT_KEYCODE_MATCH(KeyCtrl, CTRL);
ASSERT_KEYCODE_MATCH(KeyCtrlR, CTRL_R);
ASSERT_KEYCODE_MATCH(KeyMenu, MENU);
ASSERT_KEYCODE_MATCH(KeyEsc, ESC);
ASSERT_KEYCODE_MATCH(Key1, 1);
ASSERT_KEYCODE_MATCH(Key2, 2);
ASSERT_KEYCODE_MATCH(Key3, 3);
ASSERT_KEYCODE_MATCH(Key4, 4);
ASSERT_KEYCODE_MATCH(Key5, 5);
ASSERT_KEYCODE_MATCH(Key6, 6);
ASSERT_KEYCODE_MATCH(Key7, 7);
ASSERT_KEYCODE_MATCH(Key8, 8);
ASSERT_KEYCODE_MATCH(Key9, 9);
ASSERT_KEYCODE_MATCH(Key0, 0);
ASSERT_KEYCODE_MATCH(KeyMinus, MINUS);
ASSERT_KEYCODE_MATCH(KeyEqual, EQUAL);
ASSERT_KEYCODE_MATCH(KeyBackspace, BACKSPACE);
ASSERT_KEYCODE_MATCH(KeyTab, TAB);
ASSERT_KEYCODE_MATCH(KeyQ, Q);
ASSERT_KEYCODE_MATCH(KeyW, W);
ASSERT_KEYCODE_MATCH(KeyE, E);
ASSERT_KEYCODE_MATCH(KeyR, R);
ASSERT_KEYCODE_MATCH(KeyT, T);
ASSERT_KEYCODE_MATCH(KeyY, Y);
ASSERT_KEYCODE_MATCH(KeyU, U);
ASSERT_KEYCODE_MATCH(KeyI, I);
ASSERT_KEYCODE_MATCH(KeyO, O);
ASSERT_KEYCODE_MATCH(KeyP, P);
ASSERT_KEYCODE_MATCH(KeyBracketLeft, BRACKET_LEFT);
ASSERT_KEYCODE_MATCH(KeyBracketRight, BRACKET_RIGHT);
ASSERT_KEYCODE_MATCH(KeyRet, RET);
ASSERT_KEYCODE_MATCH(KeyA, A);
ASSERT_KEYCODE_MATCH(KeyS, S);
ASSERT_KEYCODE_MATCH(KeyD, D);
ASSERT_KEYCODE_MATCH(KeyF, F);
ASSERT_KEYCODE_MATCH(KeyG, G);
ASSERT_KEYCODE_MATCH(KeyH, H);
ASSERT_KEYCODE_MATCH(KeyJ, J);
ASSERT_KEYCODE_MATCH(KeyK, K);
ASSERT_KEYCODE_MATCH(KeyL, L);
ASSERT_KEYCODE_MATCH(KeySemicolon, SEMICOLON);
ASSERT_KEYCODE_MATCH(KeyApostrophe, APOSTROPHE);
ASSERT_KEYCODE_MATCH(KeyGraveAccent, GRAVE_ACCENT);
ASSERT_KEYCODE_MATCH(KeyBackslash, BACKSLASH);
ASSERT_KEYCODE_MATCH(KeyZ, Z);
ASSERT_KEYCODE_MATCH(KeyX, X);
ASSERT_KEYCODE_MATCH(KeyC, C);
ASSERT_KEYCODE_MATCH(KeyV, V);
ASSERT_KEYCODE_MATCH(KeyB, B);
ASSERT_KEYCODE_MATCH(KeyN, N);
ASSERT_KEYCODE_MATCH(KeyM, M);
ASSERT_KEYCODE_MATCH(KeyComma, COMMA);
ASSERT_KEYCODE_MATCH(KeyDot, DOT);
ASSERT_KEYCODE_MATCH(KeySlash, SLASH);
ASSERT_KEYCODE_MATCH(KeyAsterisk, ASTERISK);
ASSERT_KEYCODE_MATCH(KeySpc, SPC);
ASSERT_KEYCODE_MATCH(KeyCapsLock, CAPS_LOCK);
ASSERT_KEYCODE_MATCH(KeyF1, F1);
ASSERT_KEYCODE_MATCH(KeyF2, F2);
ASSERT_KEYCODE_MATCH(KeyF3, F3);
ASSERT_KEYCODE_MATCH(KeyF4, F4);
ASSERT_KEYCODE_MATCH(KeyF5, F5);
ASSERT_KEYCODE_MATCH(KeyF6, F6);
ASSERT_KEYCODE_MATCH(KeyF7, F7);
ASSERT_KEYCODE_MATCH(KeyF8, F8);
ASSERT_KEYCODE_MATCH(KeyF9, F9);
ASSERT_KEYCODE_MATCH(KeyF10, F10);
ASSERT_KEYCODE_MATCH(KeyNumLock, NUM_LOCK);
ASSERT_KEYCODE_MATCH(KeyScrollLock, SCROLL_LOCK);
ASSERT_KEYCODE_MATCH(KeyKpDivide, KP_DIVIDE);
ASSERT_KEYCODE_MATCH(KeyKpMultiply, KP_MULTIPLY);
ASSERT_KEYCODE_MATCH(KeyKpSubtract, KP_SUBTRACT);
ASSERT_KEYCODE_MATCH(KeyKpAdd, KP_ADD);
ASSERT_KEYCODE_MATCH(KeyKpEnter, KP_ENTER);
ASSERT_KEYCODE_MATCH(KeyKpDecimal, KP_DECIMAL);
ASSERT_KEYCODE_MATCH(KeySysRq, SYSRQ);
ASSERT_KEYCODE_MATCH(KeyKp0, KP_0);
ASSERT_KEYCODE_MATCH(KeyKp1, KP_1);
ASSERT_KEYCODE_MATCH(KeyKp2, KP_2);
ASSERT_KEYCODE_MATCH(KeyKp3, KP_3);
ASSERT_KEYCODE_MATCH(KeyKp4, KP_4);
ASSERT_KEYCODE_MATCH(KeyKp5, KP_5);
ASSERT_KEYCODE_MATCH(KeyKp6, KP_6);
ASSERT_KEYCODE_MATCH(KeyKp7, KP_7);
ASSERT_KEYCODE_MATCH(KeyKp8, KP_8);
ASSERT_KEYCODE_MATCH(KeyKp9, KP_9);
ASSERT_KEYCODE_MATCH(KeyLess, LESS);
ASSERT_KEYCODE_MATCH(KeyF11, F11);
ASSERT_KEYCODE_MATCH(KeyF12, F12);
ASSERT_KEYCODE_MATCH(KeyPrint, PRINT);
ASSERT_KEYCODE_MATCH(KeyHome, HOME);
ASSERT_KEYCODE_MATCH(KeyPgUp, PGUP);
ASSERT_KEYCODE_MATCH(KeyPgDn, PGDN);
ASSERT_KEYCODE_MATCH(KeyEnd, END);
ASSERT_KEYCODE_MATCH(KeyLeft, LEFT);
ASSERT_KEYCODE_MATCH(KeyUp, UP);
ASSERT_KEYCODE_MATCH(KeyDown, DOWN);
ASSERT_KEYCODE_MATCH(KeyRight, RIGHT);
ASSERT_KEYCODE_MATCH(KeyInsert, INSERT);
ASSERT_KEYCODE_MATCH(KeyDelete, DELETE);
ASSERT_KEYCODE_MATCH(KeyStop, STOP);
ASSERT_KEYCODE_MATCH(KeyAgain, AGAIN);
ASSERT_KEYCODE_MATCH(KeyProps, PROPS);
ASSERT_KEYCODE_MATCH(KeyUndo, UNDO);
ASSERT_KEYCODE_MATCH(KeyFront, FRONT);
ASSERT_KEYCODE_MATCH(KeyCopy, COPY);
ASSERT_KEYCODE_MATCH(KeyOpen, OPEN);
ASSERT_KEYCODE_MATCH(KeyPaste, PASTE);
ASSERT_KEYCODE_MATCH(KeyFind, FIND);
ASSERT_KEYCODE_MATCH(KeyCut, CUT);
ASSERT_KEYCODE_MATCH(KeyLf, LF);
ASSERT_KEYCODE_MATCH(KeyHelp, HELP);
ASSERT_KEYCODE_MATCH(KeyMetaL, META_L);
ASSERT_KEYCODE_MATCH(KeyMetaR, META_R);
ASSERT_KEYCODE_MATCH(KeyCompose, COMPOSE);
ASSERT_KEYCODE_MATCH(KeyPause, PAUSE);
ASSERT_KEYCODE_MATCH(KeyRo, RO);
ASSERT_KEYCODE_MATCH(KeyHiragana, HIRAGANA);
ASSERT_KEYCODE_MATCH(KeyHenkan, HENKAN);
ASSERT_KEYCODE_MATCH(KeyYen, YEN);
ASSERT_KEYCODE_MATCH(KeyMuhenkan, MUHENKAN);
ASSERT_KEYCODE_MATCH(KeyKatakanaHiragana, KATAKANAHIRAGANA);
ASSERT_KEYCODE_MATCH(KeyKpComma, KP_COMMA);
ASSERT_KEYCODE_MATCH(KeyKpEquals, KP_EQUALS);
ASSERT_KEYCODE_MATCH(KeyPower, POWER);
ASSERT_KEYCODE_MATCH(KeySleep, SLEEP);
ASSERT_KEYCODE_MATCH(KeyWake, WAKE);
ASSERT_KEYCODE_MATCH(KeyAudioNext, AUDIONEXT);
ASSERT_KEYCODE_MATCH(KeyAudioPrev, AUDIOPREV);
ASSERT_KEYCODE_MATCH(KeyAudioStop, AUDIOSTOP);
ASSERT_KEYCODE_MATCH(KeyAudioPlay, AUDIOPLAY);
ASSERT_KEYCODE_MATCH(KeyAudioMute, AUDIOMUTE);
ASSERT_KEYCODE_MATCH(KeyVolumeUp, VOLUMEUP);
ASSERT_KEYCODE_MATCH(KeyVolumeDown, VOLUMEDOWN);
ASSERT_KEYCODE_MATCH(KeyMediaSelect, MEDIASELECT);
ASSERT_KEYCODE_MATCH(KeyMail, MAIL);
ASSERT_KEYCODE_MATCH(KeyCalculator, CALCULATOR);
ASSERT_KEYCODE_MATCH(KeyComputer, COMPUTER);
ASSERT_KEYCODE_MATCH(KeyAcHome, AC_HOME);
ASSERT_KEYCODE_MATCH(KeyAcBack, AC_BACK);
ASSERT_KEYCODE_MATCH(KeyAcForward, AC_FORWARD);
ASSERT_KEYCODE_MATCH(KeyAcRefresh, AC_REFRESH);
ASSERT_KEYCODE_MATCH(KeyAcBookmarks, AC_BOOKMARKS);
ASSERT_KEYCODE_MATCH(KeyLang1, LANG1);
ASSERT_KEYCODE_MATCH(KeyLang2, LANG2);
ASSERT_KEYCODE_MATCH(KeyF13, F13);
ASSERT_KEYCODE_MATCH(KeyF14, F14);
ASSERT_KEYCODE_MATCH(KeyF15, F15);
ASSERT_KEYCODE_MATCH(KeyF16, F16);
ASSERT_KEYCODE_MATCH(KeyF17, F17);
ASSERT_KEYCODE_MATCH(KeyF18, F18);
ASSERT_KEYCODE_MATCH(KeyF19, F19);
ASSERT_KEYCODE_MATCH(KeyF20, F20);
ASSERT_KEYCODE_MATCH(KeyF21, F21);
ASSERT_KEYCODE_MATCH(KeyF22, F22);
ASSERT_KEYCODE_MATCH(KeyF23, F23);
ASSERT_KEYCODE_MATCH(KeyF24, F24);
ASSERT_KEYCODE_MATCH(KeyMax, _MAX);

#pragma clang diagnostic pop
