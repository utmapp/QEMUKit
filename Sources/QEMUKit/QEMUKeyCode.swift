//
// Copyright Â© 2025 osy. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import QEMUKitInternal

public extension QEMUMonitor {
    static let keyMap: [QEMUKeyCode: String] = [
        .keyShift: "Shift",
        .keyShiftR: "Right Shift",
        .keyAlt: "Alt",
        .keyAltR: "Right Alt",
        .keyCtrl: "Ctrl",
        .keyCtrlR: "Right Ctrl",
        .keyMenu: "Menu",
        .keyEsc: "Esc",
        .key1: "1",
        .key2: "2",
        .key3: "3",
        .key4: "4",
        .key5: "5",
        .key6: "6",
        .key7: "7",
        .key8: "8",
        .key9: "9",
        .key0: "0",
        .keyMinus: "-",
        .keyEqual: "=",
        .keyBackspace: "Backspace",
        .keyTab: "Tab",
        .keyQ: "Q",
        .keyW: "W",
        .keyE: "E",
        .keyR: "R",
        .keyT: "T",
        .keyY: "Y",
        .keyU: "U",
        .keyI: "I",
        .keyO: "O",
        .keyP: "P",
        .keyBracketLeft: "[",
        .keyBracketRight: "]",
        .keyRet: "Return",
        .keyA: "A",
        .keyS: "S",
        .keyD: "D",
        .keyF: "F",
        .keyG: "G",
        .keyH: "H",
        .keyJ: "J",
        .keyK: "K",
        .keyL: "L",
        .keySemicolon: ";",
        .keyApostrophe: "'",
        .keyGraveAccent: "`",
        .keyBackslash: "\\",
        .keyZ: "Z",
        .keyX: "X",
        .keyC: "C",
        .keyV: "V",
        .keyB: "B",
        .keyN: "N",
        .keyM: "M",
        .keyComma: ",",
        .keyDot: ".",
        .keySlash: "/",
        .keyAsterisk: "*",
        .keySpc: "Space",
        .keyCapsLock: "Caps Lock",
        .keyF1: "F1",
        .keyF2: "F2",
        .keyF3: "F3",
        .keyF4: "F4",
        .keyF5: "F5",
        .keyF6: "F6",
        .keyF7: "F7",
        .keyF8: "F8",
        .keyF9: "F9",
        .keyF10: "F10",
        .keyNumLock: "Num Lock",
        .keyScrollLock: "Scroll Lock",
        .keyKpDivide: "Keypad /",
        .keyKpMultiply: "Keypad *",
        .keyKpSubtract: "Keypad -",
        .keyKpAdd: "Keypad +",
        .keyKpEnter: "Keypad Enter",
        .keyKpDecimal: "Keypad .",
        .keySysRq: "SysRq",
        .keyKp0: "Keypad 0",
        .keyKp1: "Keypad 1",
        .keyKp2: "Keypad 2",
        .keyKp3: "Keypad 3",
        .keyKp4: "Keypad 4",
        .keyKp5: "Keypad 5",
        .keyKp6: "Keypad 6",
        .keyKp7: "Keypad 7",
        .keyKp8: "Keypad 8",
        .keyKp9: "Keypad 9",
        .keyLess: "<",
        .keyF11: "F11",
        .keyF12: "F12",
        .keyPrint: "Print Screen",
        .keyHome: "Home",
        .keyPgUp: "Page Up",
        .keyPgDn: "Page Down",
        .keyEnd: "End",
        .keyLeft: "Left Arrow",
        .keyUp: "Up Arrow",
        .keyDown: "Down Arrow",
        .keyRight: "Right Arrow",
        .keyInsert: "Insert",
        .keyDelete: "Delete",
        .keyStop: "Stop",
        .keyAgain: "Again",
        .keyProps: "Props",
        .keyUndo: "Undo",
        .keyFront: "Front",
        .keyCopy: "Copy",
        .keyOpen: "Open",
        .keyPaste: "Paste",
        .keyFind: "Find",
        .keyCut: "Cut",
        .keyLf: "Line Feed",
        .keyHelp: "Help",
        .keyMetaL: "Left Meta",
        .keyMetaR: "Right Meta",
        .keyCompose: "Compose",
        .keyPause: "Pause",
        .keyRo: "RO",
        .keyHiragana: "Hiragana",
        .keyHenkan: "Henkan",
        .keyYen: "Yen",
        .keyMuhenkan: "Muhenkan",
        .keyKatakanaHiragana: "Katakana/Hiragana",
        .keyKpComma: "Keypad ,",
        .keyKpEquals: "Keypad =",
        .keyPower: "Power",
        .keySleep: "Sleep",
        .keyWake: "Wake",
        .keyAudioNext: "Next Track",
        .keyAudioPrev: "Previous Track",
        .keyAudioStop: "Stop Audio",
        .keyAudioPlay: "Play/Pause",
        .keyAudioMute: "Mute",
        .keyVolumeUp: "Volume Up",
        .keyVolumeDown: "Volume Down",
        .keyMediaSelect: "Media Select",
        .keyMail: "Mail",
        .keyCalculator: "Calculator",
        .keyComputer: "Computer",
        .keyAcHome: "AC Home",
        .keyAcBack: "AC Back",
        .keyAcForward: "AC Forward",
        .keyAcRefresh: "AC Refresh",
        .keyAcBookmarks: "AC Bookmarks",
        .keyLang1: "Language 1",
        .keyLang2: "Language 2",
        .keyF13: "F13",
        .keyF14: "F14",
        .keyF15: "F15",
        .keyF16: "F16",
        .keyF17: "F17",
        .keyF18: "F18",
        .keyF19: "F19",
        .keyF20: "F20",
        .keyF21: "F21",
        .keyF22: "F22",
        .keyF23: "F23",
        .keyF24: "F24"
    ]

    func sendKeys(_ keys: [QEMUKeyCode], holdTime: Int = 0) async throws {
        try await sendKeysRaw(keys.map({ NSNumber(integerLiteral: $0.rawValue) }), holdTime: holdTime)
    }
}
